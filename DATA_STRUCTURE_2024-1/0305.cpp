// 연산횟수가 많을수록 좋은 알고리즘
// 빅오 표기법 
// 입력에 상관없이 항상 같은 수행시간이 걸리는 알고리즘이 좋은 거임
// O(1) < -빅오를 사용했을 때 걸리는 수행시간 time complex 
// if 3n+3 : 입력에 상관 없이 3번 하고 3배함. 
// O(n) : 빅오의 수행시간이 선형대수적으로 증가함을 보이는 것.
// 
// 상수는 무조건 빅오, 
// 빅오는 최악의 경우를 말함. 빅오 이상으로 넘어가지 않아야 함.
//

// res = n * fact(n - 1); <- 여기서 발생하는 문제는 자기자신을 무한대로 호출하기때문에 끝나지 않음.
	// 이걸 해결하기 위해 stop 조건 (= 탈출조건 ) 을 무조건 써야 함.
 // stop조건은  return 1; <-  이거임. 





